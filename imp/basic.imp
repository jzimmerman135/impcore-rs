(define add-ten (x) (+ 10 x))
(define locals (n x)
    (begin (if (> n 0)
               (set n 14)
               (set n (- 0 13)))
            (+ n x)))
(define set-global-with-loop (x) 
    (+ x
        (while (< (- t 1) x)
                (set t (+ t 1)))))            

;; 0 - 3 tests variables and top level expressions
(+ 0 0)
1
(val n 2)
(add-ten (/ 70 -10))

;; 4 - 6 tests local scope precedence
(locals 8 -10)
(locals -8 18)
(+ n 4)

;; 7 - 12 tests multiple globals and setting them various contexts
(val t (set n 7))
(set-global-with-loop 8)
t
(+ n 3)
(val t 11)
(+ t 1)

;; 8 - ? working with arrays
(val arr[18] 6)
(set arr[9] 12)
;; (set arr[3] 7)
;; arr[3]
;; arr[9]
